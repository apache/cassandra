--- a/test/distributed/org/apache/cassandra/distributed/test/NativeTransportEncryptionOptionsTest.java
+++ b/test/distributed/org/apache/cassandra/distributed/test/NativeTransportEncryptionOptionsTest.java
@@ -139,13 +139,6 @@
 
     /**
      * Tests that the negotiated protocol is the highest common protocol between the client and server.
-     * <p> 
-     * Note: This test uses TLSV1.1, which is disabled by default in JDK 8 and higher. If the test fails with 
-     * FAILED_TO_NEGOTIATE, it may be necessary to check the java.security file in your JDK installation and remove 
-     * TLSv1.1 from the jdk.tls.disabledAlgorithms.
-     * @see <a href="https://issues.apache.org/jira/browse/CASSANDRA-18540">CASSANDRA-18540</a>
-     * @see <a href="https://senthilnayagan.medium.com/tlsv1-and-tlsv1-1-protocols-disabled-by-default-in-javas-latest-patch-released-on-april-20-2021-52c309f6b16d">
-     *     TLSv1 and TLSv1.1 Protocols are Disabled in Java!</a>
      */
     @Test
     public void negotiatedProtocolMustBeAcceptedProtocolTest() throws Throwable
@@ -155,11 +148,7 @@
             c.set("client_encryption_options",
                   ImmutableMap.builder().putAll(validKeystore)
                               .put("enabled", true)
-<<<<<<<
                               .put("accepted_protocols", Collections.singletonList("TLSv1.2"))
-=======
-                              .put("accepted_protocols", ImmutableList.of("TLSv1.1", "TLSv1.2"))
->>>>>>>
                               .build());
         }).start())
         {
@@ -172,7 +161,7 @@
             tls10Connection.assertReceivedHandshakeException();
 
             TlsConnection tls11Connection = new TlsConnection(address.getHostAddress(), port, Collections.singletonList("TLSv1.1"));
-            Assert.assertEquals("Should be possible to establish a TLSv1.1 connection",
+            Assert.assertEquals("Should not be possible to establish a TLSv1.1 connection",
                                 ConnectResult.FAILED_TO_NEGOTIATE, tls11Connection.connect());
             tls11Connection.assertReceivedHandshakeException();
 
@@ -180,14 +169,11 @@
             Assert.assertEquals("Should be possible to establish a TLSv1.2 connection",
                                 ConnectResult.NEGOTIATED, tls12Connection.connect());
             Assert.assertEquals("TLSv1.2", tls12Connection.lastProtocol());
-<<<<<<<
-=======
 
             TlsConnection tls13Connection = new TlsConnection(address.getHostAddress(), port, Collections.singletonList("TLSv1.3"));
-            Assert.assertEquals("Should be possible to establish a TLSv1.3 connection",
+            Assert.assertEquals("Should not be possible to establish a TLSv1.3 connection",
                                 ConnectResult.FAILED_TO_NEGOTIATE, tls13Connection.connect());
             tls13Connection.assertReceivedHandshakeException();
->>>>>>>
         }
     }
 
diff --git a/test/distributed/org/apache/cassandra/distributed/test/NativeTransportEncryptionOptionsTest.java b/test/distributed/org/apache/cassandra/distributed/test/NativeTransportEncryptionOptionsTest.java
index 15ad748140..ef919fb41f 100644
--- a/test/distributed/org/apache/cassandra/distributed/test/NativeTransportEncryptionOptionsTest.java
+++ b/test/distributed/org/apache/cassandra/distributed/test/NativeTransportEncryptionOptionsTest.java
@@ -139,13 +139,6 @@ public class NativeTransportEncryptionOptionsTest extends AbstractEncryptionOpti
 
     /**
      * Tests that the negotiated protocol is the highest common protocol between the client and server.
-     * <p> 
-     * Note: This test uses TLSV1.1, which is disabled by default in JDK 8 and higher. If the test fails with 
-     * FAILED_TO_NEGOTIATE, it may be necessary to check the java.security file in your JDK installation and remove 
-     * TLSv1.1 from the jdk.tls.disabledAlgorithms.
-     * @see <a href="https://issues.apache.org/jira/browse/CASSANDRA-18540">CASSANDRA-18540</a>
-     * @see <a href="https://senthilnayagan.medium.com/tlsv1-and-tlsv1-1-protocols-disabled-by-default-in-javas-latest-patch-released-on-april-20-2021-52c309f6b16d">
-     *     TLSv1 and TLSv1.1 Protocols are Disabled in Java!</a>
      */
     @Test
     public void negotiatedProtocolMustBeAcceptedProtocolTest() throws Throwable
@@ -168,7 +161,7 @@ public class NativeTransportEncryptionOptionsTest extends AbstractEncryptionOpti
             tls10Connection.assertReceivedHandshakeException();
 
             TlsConnection tls11Connection = new TlsConnection(address.getHostAddress(), port, Collections.singletonList("TLSv1.1"));
-            Assert.assertEquals("Should be possible to establish a TLSv1.1 connection",
+            Assert.assertEquals("Should not be possible to establish a TLSv1.1 connection",
                                 ConnectResult.FAILED_TO_NEGOTIATE, tls11Connection.connect());
             tls11Connection.assertReceivedHandshakeException();
 
@@ -178,7 +171,7 @@ public class NativeTransportEncryptionOptionsTest extends AbstractEncryptionOpti
             Assert.assertEquals("TLSv1.2", tls12Connection.lastProtocol());
 
             TlsConnection tls13Connection = new TlsConnection(address.getHostAddress(), port, Collections.singletonList("TLSv1.3"));
-            Assert.assertEquals("Should be possible to establish a TLSv1.3 connection",
+            Assert.assertEquals("Should not be possible to establish a TLSv1.3 connection",
                                 ConnectResult.FAILED_TO_NEGOTIATE, tls13Connection.connect());
             tls13Connection.assertReceivedHandshakeException();
         }
