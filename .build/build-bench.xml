<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project basedir="." name="apache-cassandra-bench"
         xmlns:if="ant:if" xmlns:unless="ant:unless">

    <property name="async-profiler.version" value="2.9"/>
    <condition property="async-profiler.suffix" value="linux-arm64">
        <os arch="aarch64" family="unix"/>
    </condition>
    <condition property="async-profiler.suffix" value="linux-x64">
        <os arch="amd64" family="unix"/>
    </condition>
    <condition property="async-profiler.suffix" value="macos">
        <os family="mac"/>
    </condition>
    <property name="async-profiler.name" value="async-profiler-${async-profiler.version}-${async-profiler.suffix}"/>
    <property name="async-profiler.base" value="${build.dir}/async-profiler"/>
    <property name="async-profiler.dir" value="${async-profiler.base}/${async-profiler.name}"/>

    <property name="test.profiler.opts.default" value="event=cpu;threads=true;output=flamegraph;simple=true;ann=true"/>
    <property name="test.profiler.output" value="${build.test.dir}/profiler"/>

    <target name="-microbench">
        <antcall target="-fetch-async-profiler" inheritrefs="true"/>

        <condition property="test.profiler.opts" value="${test.profiler.opts.default}" else="${test.profiler}">
            <and>
                <isset property="test.profiler"/>
                <equals arg1="${test.profiler}" arg2=""/>
            </and>
        </condition>

        <condition property="async-profiler.lib.path"
                   value="${async-profiler.dir}/build/libasyncProfiler.dylib"
                   else="${async-profiler.dir}/build/libasyncProfiler.so">
            <os family="mac"/>
        </condition>

        <condition property="test.profiler.args"
                   value="-prof 'async:libPath=${async-profiler.lib.path};dir=${test.profiler.output};${test.profiler.opts}'"
                   else="">
            <isset property="test.profiler"/>
        </condition>

        <mkdir dir="${test.profiler.output}"/>

        <java classname="org.openjdk.jmh.Main" fork="true" failonerror="true">
            <classpath>
                <path refid="cassandra.classpath.test"/>
                <pathelement location="${test.classes}"/>
                <pathelement location="${test.conf}"/>
                <pathelement location="${async-profiler.dir}/lib/async-profiler.jar"/>
                <pathelement location="${async-profiler.dir}/lib/converter.jar"/>
            </classpath>
            <arg value="-foe"/>
            <arg value="true"/>
            <arg value="-rf"/>
            <arg value="json"/>
            <arg value="-rff"/>
            <arg value="${build.test.dir}/jmh-result.json"/>
            <arg value="-v"/>
            <arg value="EXTRA"/>
            <jvmarg line="${java-jvmargs}"/>
            <jvmarg line="${_std-test-jvmargs}"/>
            <jvmarg line="${test.jvm.args}"/>
            <arg line="${test.profiler.args}"/>

            <!-- Broken: ZeroCopyStreamingBench,MutationBench,FastThreadLocalBench  (FIXME) -->
            <arg value="-e"/>
            <arg value="ZeroCopyStreamingBench|MutationBench|FastThreadLocalBench"/>

            <arg value=".*microbench.*${benchmark.name}"/>
        </java>
    </target>

    <target name="-fetch-async-profiler">
        <mkdir dir="${build.dir}/tmp"/>
        <mkdir dir="${async-profiler.base}"/>

        <condition property="isMac" value="true">
            <os family="mac"/>
        </condition>

        <antcall target="-fetch-async-profiler-mac" if:set="${isMac}" inheritrefs="true"/>
        <antcall target="-fetch-async-profiler-linux" unless:set="${isMac}" inheritrefs="true"/>
    </target>

    <target name="-fetch-async-profiler-linux">
        <get src="https://github.com/async-profiler/async-profiler/releases/download/v${async-profiler.version}/${async-profiler.name}.tar.gz"
             dest="${build.dir}/tmp/${async-profiler.name}.tar.gz" retries="3" httpusecaches="true"/>
        <gunzip src="${build.dir}/tmp/${async-profiler.name}.tar.gz" dest="${async-profiler.base}/"/>
        <untar src="${async-profiler.base}/${async-profiler.name}.tar" dest="${async-profiler.base}/"/>
    </target>

    <target name="-fetch-async-profiler-mac">
        <get src="https://github.com/async-profiler/async-profiler/releases/download/v${async-profiler.version}/${async-profiler.name}.zip"
             dest="${build.dir}/tmp/${async-profiler.name}.zip" retries="3" httpusecaches="true"/>
        <unzip src="${build.dir}/tmp/${async-profiler.name}.zip" dest="${async-profiler.base}/"/>
    </target>

</project>
