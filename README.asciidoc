Apache Cassandra
-----------------

Apache Cassandra 是一个高度可伸缩的分区行存储。行用主键key组织成表.

https://cwiki.apache.org/confluence/display/CASSANDRA2/Partitioners[Partitioning] 的意思是Cassandra可以在应用程序透明的情况下将数据分布到多台机器上。 Cassandra 将在添加和从集群中删除机器时自动重新分区。

https://cwiki.apache.org/confluence/display/CASSANDRA2/DataModel[Row store] 的意思是就像关系数据库一样， Cassandra 按行和列组织数据。 Cassandra查询语言(CQL)是SQL的近亲。

查看更多信息, 请查看 http://cassandra.apache.org/[the Apache Cassandra web site].

安装要求
------------
. Java >= 1.8 (OpenJDK and Oracle JVMS have been tested)
. Python 3.6+ (for cqlsh)

如何开始
---------------

这个简短的指南将引导您完成一个基本的单节点集群
和运行, 并演示一些简单的读写。 有关更完整的指南，请参阅 Apache Cassandra website's http://cassandra.apache.org/doc/latest/getting_started/[Getting Started Guide].

首先，解压压缩文件:

  $ tar -zxvf apache-cassandra-$VERSION.tar.gz
  $ cd apache-cassandra-$VERSION

之后可以直接运行服务， 使用 -f 参数运行启动脚本，Cassandra 将运行前台，控制台会输出标准日志; 如果想停止它可以使用 ctrl-C.

  $ bin/cassandra -f

现在让我们尝试使用Cassandra查询语言读取和写入一些数据:

  $ bin/cqlsh

命令行客户端是交互式的，如果没有什么问题，大概是这个样子的:

----
Connected to Test Cluster at localhost:9160.
[cqlsh 6.0.0 | Cassandra 4.1 | CQL spec 3.4.6 | Native protocol v5]
Use HELP for help.
cqlsh>
----




As the banner says, you can use 'help;' or '?' to see what CQL has to
offer, and 'quit;' or 'exit;' when you've had enough fun. But lets try
something slightly more interesting:

----
cqlsh> CREATE KEYSPACE schema1
       WITH replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };
cqlsh> USE schema1;
cqlsh:Schema1> CREATE TABLE users (
                 user_id varchar PRIMARY KEY,
                 first varchar,
                 last varchar,
                 age int
               );
cqlsh:Schema1> INSERT INTO users (user_id, first, last, age)
               VALUES ('jsmith', 'John', 'Smith', 42);
cqlsh:Schema1> SELECT * FROM users;
 user_id | age | first | last
---------+-----+-------+-------
  jsmith |  42 |  john | smith
cqlsh:Schema1>
----

If your session looks similar to what's above, congrats, your single node
cluster is operational!

For more on what commands are supported by CQL, see
http://cassandra.apache.org/doc/latest/cql/[the CQL reference]. A
reasonable way to think of it is as, "SQL minus joins and subqueries, plus collections."

Wondering where to go from here?

  * Join us in #cassandra on the https://s.apache.org/slack-invite[ASF Slack] and ask questions
  * Subscribe to the Users mailing list by sending a mail to
    user-subscribe@cassandra.apache.org
  * Visit the http://cassandra.apache.org/community/[community section] of the Cassandra website for more information on getting involved.
  * Visit the http://cassandra.apache.org/doc/latest/development/index.html[development section] of the Cassandra website for more information on how to contribute.
